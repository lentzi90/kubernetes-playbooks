- name: Add hostname to /etc/hosts
  lineinfile:
    destfile: /etc/hosts
    state: present
    line: "{{ hostvars[item].ansible_host }} {{item}}"
  when: hostvars[item].ansible_host is defined
  with_items: "{{ groups['all'] }}"

- name: Remove swap from fstab
  lineinfile:
    destfile: /etc/fstab
    regexp: 'swap'
    state: absent
  register: swap

- name: Disable swap
  command: swapoff --all
  when: swap is changed

- name: Check if firewalld is installed
  stat:
    path: /usr/sbin/firewalld
  register: firewalld

- name: Disable firewall
  systemd:
    name: firewalld
    state: stopped
  when: firewalld.stat.exists

- import_tasks: "{{ container_runtime }}.yml"

- name: Set SELinux to permissive permanently
  lineinfile:
    destfile: /etc/sysconfig/selinux
    regexp: '^SELINUX='
    line: 'SELINUX=permissive'
    state: present
  register: selinux

- name: Disable SELinux
  command: setenforce 0
  when: selinux is changed

# -----------------------------------------------------------------------------
- name: Add kubernetes repo
  yum_repository:
    name: Kubernetes
    file: kubernetes
    description: Kubernetes repository
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-{{ ansible_architecture }}
    gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    gpgcheck: yes
    repo_gpgcheck: yes
  register: kubernetes_repo

- name: Refresh repo cache
  command: dnf clean metadata
  args:
    warn: no
  when: kubernetes_repo.changed

- name: Install parts
  dnf:
    name:
      - kubelet-{{ kubernetes_version }}
      - kubeadm-{{ kubernetes_version }}
      - kubectl-{{ kubernetes_version }}
      # Optional
      - iproute-tc

# -----------------------------------------------------------------------------

- name: Start and enable kubelet service
  systemd:
    name: kubelet
    state: started
    enabled: yes

- name: Pass bridged IPv4 traffic to iptables
  block:
    - command: sysctl net.bridge.bridge-nf-call-iptables
      register: iptables
      changed_when: False
    - command: sysctl net.bridge.bridge-nf-call-iptables=1
      when: iptables.stdout != "net.bridge.bridge-nf-call-iptables = 1"
  when: network_provider in ["flannel", "kube-router"]

- name: Reload daemons
  systemd:
    daemon_reload: yes
